%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
%
% Kinematics of the continuum
%
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------

function init_kinematics            =  KinematicsFunctionVolumeC(init_kinematics,dim,x_elem,DNX) 

n_gauss                             =  size(DNX,3);
F                                   =  zeros(dim,dim);
H                                   =  zeros(dim,dim);
J                                   =  1;
Dx0DX                               =  zeros(dim,dim);
for igauss=1:n_gauss
    %----------------------------------------------------------------------
    % Compute derivative of displacements (Dx0DX)
    %----------------------------------------------------------------------
    Dx0DX                           =  x_elem*DNX(:,:,igauss)';
    %----------------------------------------------------------------------
    % Compute deformation gradient tensor
    %----------------------------------------------------------------------
    F                               =  Dx0DX;
    switch dim
        case 2
            H                       =  trace(F)*eye(2) - F';
        case 3
            H                       =  [[F(2,2)*F(3,3) - F(2,3)*F(3,2) - F(3,2)*F(2,3) + F(3,3)*F(2,2)        F(2,3)*F(3,1) - F(2,1)*F(3,3) - F(3,3)*F(2,1) + F(3,1)*F(2,3)     F(2,1)*F(3,2) - F(2,2)*F(3,1) - F(3,1)*F(2,2) + F(3,2)*F(2,1)];...
                                       [F(3,2)*F(1,3) - F(3,3)*F(1,2) - F(1,2)*F(3,3) + F(1,3)*F(3,2)        F(3,3)*F(1,1) - F(3,1)*F(1,3) - F(1,3)*F(3,1) + F(1,1)*F(3,3)     F(3,1)*F(1,2) - F(3,2)*F(1,1) - F(1,1)*F(3,2) + F(1,2)*F(3,1)];...
                                       [F(1,2)*F(2,3) - F(1,3)*F(2,2) - F(2,2)*F(1,3) + F(2,3)*F(1,2)        F(1,3)*F(2,1) - F(1,1)*F(2,3) - F(2,3)*F(1,1) + F(2,1)*F(1,3)     F(1,1)*F(2,2) - F(1,2)*F(2,1) - F(2,1)*F(1,2) + F(2,2)*F(1,1)]];
    end
    J                               =  det(F);
    %----------------------------------------------------------------------
    %  Storing information.
    %----------------------------------------------------------------------
    init_kinematics.F(:,:,igauss)   =  F;
    init_kinematics.H(:,:,igauss)   =  H;
    init_kinematics.J(igauss)       =  J;
end




